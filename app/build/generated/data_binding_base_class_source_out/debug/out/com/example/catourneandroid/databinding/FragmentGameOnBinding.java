// Generated by view binder compiler. Do not edit!
package com.example.catourneandroid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.catourneandroid.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import nl.dionsegijn.konfetti.xml.KonfettiView;

public final class FragmentGameOnBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton btnAddPlayers;

  @NonNull
  public final ImageButton btnButRed;

  @NonNull
  public final ImageButton btnButYellow;

  @NonNull
  public final ImageButton btnGoHome;

  @NonNull
  public final ImageButton btnGoScore;

  @NonNull
  public final KonfettiView konfettiView;

  @NonNull
  public final LinearLayout layoutWaitingPlayersZone;

  @NonNull
  public final TextView redTeamAtq;

  @NonNull
  public final TextView redTeamDef;

  @NonNull
  public final ScrollView scrollWaitingPlayers;

  @NonNull
  public final TextView yellowTeamAtq;

  @NonNull
  public final TextView yellowTeamDef;

  private FragmentGameOnBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton btnAddPlayers, @NonNull ImageButton btnButRed,
      @NonNull ImageButton btnButYellow, @NonNull ImageButton btnGoHome,
      @NonNull ImageButton btnGoScore, @NonNull KonfettiView konfettiView,
      @NonNull LinearLayout layoutWaitingPlayersZone, @NonNull TextView redTeamAtq,
      @NonNull TextView redTeamDef, @NonNull ScrollView scrollWaitingPlayers,
      @NonNull TextView yellowTeamAtq, @NonNull TextView yellowTeamDef) {
    this.rootView = rootView;
    this.btnAddPlayers = btnAddPlayers;
    this.btnButRed = btnButRed;
    this.btnButYellow = btnButYellow;
    this.btnGoHome = btnGoHome;
    this.btnGoScore = btnGoScore;
    this.konfettiView = konfettiView;
    this.layoutWaitingPlayersZone = layoutWaitingPlayersZone;
    this.redTeamAtq = redTeamAtq;
    this.redTeamDef = redTeamDef;
    this.scrollWaitingPlayers = scrollWaitingPlayers;
    this.yellowTeamAtq = yellowTeamAtq;
    this.yellowTeamDef = yellowTeamDef;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGameOnBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGameOnBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_game_on, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGameOnBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddPlayers;
      ImageButton btnAddPlayers = ViewBindings.findChildViewById(rootView, id);
      if (btnAddPlayers == null) {
        break missingId;
      }

      id = R.id.btnButRed;
      ImageButton btnButRed = ViewBindings.findChildViewById(rootView, id);
      if (btnButRed == null) {
        break missingId;
      }

      id = R.id.btnButYellow;
      ImageButton btnButYellow = ViewBindings.findChildViewById(rootView, id);
      if (btnButYellow == null) {
        break missingId;
      }

      id = R.id.btnGoHome;
      ImageButton btnGoHome = ViewBindings.findChildViewById(rootView, id);
      if (btnGoHome == null) {
        break missingId;
      }

      id = R.id.btnGoScore;
      ImageButton btnGoScore = ViewBindings.findChildViewById(rootView, id);
      if (btnGoScore == null) {
        break missingId;
      }

      id = R.id.konfettiView;
      KonfettiView konfettiView = ViewBindings.findChildViewById(rootView, id);
      if (konfettiView == null) {
        break missingId;
      }

      id = R.id.layout_waiting_players_zone;
      LinearLayout layoutWaitingPlayersZone = ViewBindings.findChildViewById(rootView, id);
      if (layoutWaitingPlayersZone == null) {
        break missingId;
      }

      id = R.id.red_team_atq;
      TextView redTeamAtq = ViewBindings.findChildViewById(rootView, id);
      if (redTeamAtq == null) {
        break missingId;
      }

      id = R.id.red_team_def;
      TextView redTeamDef = ViewBindings.findChildViewById(rootView, id);
      if (redTeamDef == null) {
        break missingId;
      }

      id = R.id.scroll_waiting_players;
      ScrollView scrollWaitingPlayers = ViewBindings.findChildViewById(rootView, id);
      if (scrollWaitingPlayers == null) {
        break missingId;
      }

      id = R.id.yellow_team_atq;
      TextView yellowTeamAtq = ViewBindings.findChildViewById(rootView, id);
      if (yellowTeamAtq == null) {
        break missingId;
      }

      id = R.id.yellow_team_def;
      TextView yellowTeamDef = ViewBindings.findChildViewById(rootView, id);
      if (yellowTeamDef == null) {
        break missingId;
      }

      return new FragmentGameOnBinding((RelativeLayout) rootView, btnAddPlayers, btnButRed,
          btnButYellow, btnGoHome, btnGoScore, konfettiView, layoutWaitingPlayersZone, redTeamAtq,
          redTeamDef, scrollWaitingPlayers, yellowTeamAtq, yellowTeamDef);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
